# encoding: utf-8
# Release 17.2
SetScriptVersion(Version="17.2.225")
system1 = GetSystem(Name="FFF")
geometry1 = system1.GetContainer(ComponentName="Geometry")
geometry1.SetFile(FilePath="D:/Projects/UBC Rocket/Aerostructures/Nosecone/Nosecone ANSYS Fluent Model.IGS")
geometry1.Edit()
geometry1.Exit()
meshComponent1 = system1.GetComponent(Name="Mesh")
meshComponent1.Update(AllDependencies=True)
mesh1 = system1.GetContainer(ComponentName="Mesh")
mesh1.Edit()
mesh1.Exit()
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
mesh1.Edit()
mesh1.Exit()
setupComponent1.Clean()
setupComponent1.Reset()
setupComponent1.Refresh()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(DisplayText="Fluent Launcher Settings", Precision="Double", EnvPath={}, RunParallel=True, NumberOfProcessors=4))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table2(Mesh)*PushButton3(Check)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Setting Up Domain)*Table1*Table2(Mesh)*PushButton4(Quality)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Models\"))(cx-gui-do cx-set-list-selections \"Models*Table1*List1(Models)\" '( 1))(cx-gui-do cx-activate-item \"Models*Table1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Energy*Table1(Energy)*ToggleBox1*CheckButton1(Energy Equation)" #t)(cx-gui-do cx-activate-item "Energy*Table1(Energy)*ToggleBox1*CheckButton1(Energy Equation)")(cx-gui-do cx-activate-item "Energy*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Models*Table1*List1(Models)\" '( 2))(cx-gui-do cx-activate-item \"Models*Table1*List1(Models)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Models*Table1*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Viscous Model*Table1*ToggleBox1(Model)*k-epsilon (2 eqn)" #t)(cx-gui-do cx-activate-item "Viscous Model*Table1*ToggleBox1(Model)*k-epsilon (2 eqn)")(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 13))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table8*RealEntry2(Velocity Magnitude)\" '( 300))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*Table3*DropDownList2(Type)\" '( 6))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*DropDownList2(Type)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Outflow*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Drag...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Drag Monitor*Table1*Table2*List1(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table2*List1(Wall Zones)\")(cx-gui-do cx-set-toggle-button2 \"Drag Monitor*Table1*Table1*Table1(Options)*CheckButton2(Plot)\" #t)(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table1*Table1(Options)*CheckButton2(Plot)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table4*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Monitor*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table6*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Monitor*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Initialization"))(cx-gui-do cx-set-toggle-button2 "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization" #t)(cx-gui-do cx-activate-item "Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*ButtonBox8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*IntegerEntry10(Number of Iterations)" 30)(cx-gui-do cx-activate-item "Run Calculation*Table1*IntegerEntry10(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Information*OK\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Plots\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors\"))(cx-gui-do cx-set-list-selections \"Monitors*Table1*List1(Residuals, Statistic and Force Monitors)\" '( 2))(cx-gui-do cx-activate-item \"Monitors*Table1*List1(Residuals, Statistic and Force Monitors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Calculation Activities"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Drag...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Drag Monitor*Table1*Table1*Table1(Options)*CheckButton2(Plot)\" #t)(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table1*Table1(Options)*CheckButton2(Plot)\")(cx-gui-do cx-set-list-selections \"Drag Monitor*Table1*Table2*List1(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table2*List1(Wall Zones)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Initialization\"))(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*ButtonBox8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_run_calculation")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuUpdateCell*Continue")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")')
results1 = system1.GetContainer(ComponentName="Results")
results1.Edit()
results1.SendCommand(Command="""VIEW:View 4
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0, 0, 0
    Scale = 0.975605
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 4""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 2.19564
    Pan = 0, 0
    Rotation Quaternion = 0.03056, -0.0582511, 0.995075, 0.0742479
    
  END

END

> update
# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/STREAMLINE:Streamline 1, view=VIEW:View 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 2.19564
    Pan = 0, 0
    Rotation Quaternion = 0.269714, -0.095152, 0.957348, 0.0412745
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 2.70808
    Pan = 0, 0
    Rotation Quaternion = 0.07424, 0.0047904, 0.972026, 0.222814
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.55323
    Pan = 0, 0
    Rotation Quaternion = 0.0808657, -0.0281703, 0.95116, 0.29663
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /DEFAULT LEGEND:Default Legend View 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DEFAULT LEGEND:Default Legend View 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/CONTOUR:Contour 1, view=VIEW:View 1")
results1.SendCommand(Command="""CONTOUR:Contour 1
Apply Instancing Transform = On
Clip Contour = Off
Colour Map = Default Colour Map
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Constant Contour Colour = Off
Contour Range = Global
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Contours = On
Font = Sans Serif
Fringe Fill = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Location List = wall air
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Number of Contours = 11
Show Numbers = Off
Specular Lighting = On
Surface Drawing = Smooth Shading
Text Colour = 0, 0, 0
Text Colour Mode = Default
Text Height = 0.024
Transparency = 0.0
Use Face Values = Off
Value List = 0 [Pa],1 [Pa]
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.55323
    Pan = 0, 0
    Rotation Quaternion = 0.0544015, -0.187379, 0.934102, 0.29902
    
  END

END

> update
CONTOUR:Contour 1
Apply Instancing Transform = On
Clip Contour = Off
Colour Map = Default Colour Map
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Constant Contour Colour = Off
Contour Range = Global
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Contours = On
Font = Sans Serif
Fringe Fill = On
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Location List = wall air
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Number of Contours = 50
Show Numbers = Off
Specular Lighting = On
Surface Drawing = Smooth Shading
Text Colour = 0, 0, 0
Text Colour Mode = Default
Text Height = 0.024
Transparency = 0.0
Use Face Values = Off
Value List = 0 [Pa],1 [Pa]
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.14054
    Pan = 0, 0
    Rotation Quaternion = 0.223788, -0.194414, 0.935988, 0.189948
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/VOLUME RENDERING:Volume Rendering 1, view=VIEW:View 1")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Blend Texture = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = air
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = Off
Surface Drawing = Smooth Shading
Texture Angle = 0
Texture Direction = 0 , 1 , 0 
Texture File =  
Texture Material = Metal
Texture Position = 0 , 0 
Texture Scale = 1
Texture Type = Predefined
Tile Texture = Off
Transform Texture = Off
Transparency = 0.326
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 100
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Blend Texture = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = air
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = Off
Surface Drawing = Smooth Shading
Texture Angle = 0
Texture Direction = 0 , 1 , 0 
Texture File =  
Texture Material = Metal
Texture Position = 0 , 0 
Texture Scale = 1
Texture Type = Predefined
Tile Texture = Off
Transform Texture = Off
Transparency = 0.521
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 100
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.14054
    Pan = 0, 0
    Rotation Quaternion = 0.087709, -0.182078, 0.972059, 0.119532
    
  END

END

> update
VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Blend Texture = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = air
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = Off
Surface Drawing = Smooth Shading
Texture Angle = 0
Texture Direction = 0 , 1 , 0 
Texture File =  
Texture Material = Metal
Texture Position = 0 , 0 
Texture Scale = 1
Texture Type = Predefined
Tile Texture = Off
Transform Texture = Off
Transparency = 0.521
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 50
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.14054
    Pan = 0, 0
    Rotation Quaternion = 0.342242, -0.131498, 0.914502, 0.171159
    
  END

END

> update
VOLUME RENDERING:Volume Rendering 1
Apply Instancing Transform = On
Apply Texture = Off
Blend Texture = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure
Colour Variable Boundary Values = Conservative
Culling Mode = No Culling
Domain List = air
Draw Faces = On
Draw Lines = Off
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = Off
Line Colour = 0, 0, 0
Line Colour Mode = Default
Line Width = 1
Max = 0.0 [Pa]
Min = 0.0 [Pa]
Range = Global
Render Edge Angle = 0 [degree]
Specular Lighting = Off
Surface Drawing = Smooth Shading
Texture Angle = 0
Texture Direction = 0 , 1 , 0 
Texture File =  
Texture Material = Metal
Texture Position = 0 , 0 
Texture Scale = 1
Texture Type = Predefined
Tile Texture = Off
Transform Texture = Off
Transparency = 0.2
Transparency Colour Map = Transparency
Variable = Pressure
Variable Boundary Values = Conservative
Volume Rendering Max = 0.0 [Pa]
Volume Rendering Min = 0.0 [Pa]
Volume Rendering Range = Global
Volume Rendering Scale = Linear
Volume Resolution = 100
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="> autolegend plot=/STREAMLINE:Streamline 1, view=VIEW:View 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""STREAMLINE:Streamline 1
Absolute Tolerance = 0.0 [m]
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Velocity
Colour Variable Boundary Values = Conservative
Cross Periodics = On
Culling Mode = No Culling
Domain List = air
Draw Faces = On
Draw Lines = Off
Draw Streams = On
Draw Symbols = Off
Grid Tolerance = 0.01
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = input
Locator Sampling Method = Equally Spaced
Max = 0.0 [m s^-1]
Maximum Number of Items = 25
Min = 0.0 [m s^-1]
Number of Samples = 100
Number of Sides = 8
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Seed Point Type = Equally Spaced Samples
Simplify Geometry = Off
Specular Lighting = On
Stream Drawing Mode = Line
Stream Initial Direction = 0 , 0 , 0 
Stream Size = 1.0
Stream Symbol = Ball
Streamline Direction = Forward
Streamline Maximum Periods = 20
Streamline Maximum Segments = 10000
Streamline Maximum Time = 0.0 [s]
Streamline Type = 3D Streamline
Streamline Width = 2
Surface Drawing = Smooth Shading
Surface Streamline Direction = Forward and Backward
Symbol Size = 1.0
Symbol Start Time = 10.0 [s]
Symbol Stop Time = -10.0 [s]
Symbol Time Interval = 1.0 [s]
Tolerance Mode = Grid Relative
Transparency = 0.0
Variable = Velocity
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.14054
    Pan = 0, 0
    Rotation Quaternion = 0.168534, -0.093051, 0.96964, 0.150903
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 1""")
results1.SendCommand(Command="> autolegend plot=/STREAMLINE:Streamline 2, view=VIEW:View 1")
results1.SendCommand(Command="""STREAMLINE:Streamline 2
Absolute Tolerance = 0.0 [m]
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Pressure.Gradient
Colour Variable Boundary Values = Conservative
Cross Periodics = On
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Draw Streams = On
Draw Symbols = Off
Grid Tolerance = 0.01
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = input
Locator Sampling Method = Equally Spaced
Max = 0.0 [kg m^-2 s^-2]
Maximum Number of Items = 25
Min = 0.0 [kg m^-2 s^-2]
Number of Samples = 25
Number of Sides = 8
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Seed Point Type = Equally Spaced Samples
Simplify Geometry = Off
Specular Lighting = On
Stream Drawing Mode = Line
Stream Initial Direction = 0 , 0 , 0 
Stream Size = 1.0
Stream Symbol = Ball
Streamline Direction = Forward
Streamline Maximum Periods = 20
Streamline Maximum Segments = 10000
Streamline Maximum Time = 0.0 [s]
Streamline Type = 3D Streamline
Streamline Width = 2
Surface Drawing = Smooth Shading
Surface Streamline Direction = Forward and Backward
Symbol Size = 1.0
Symbol Start Time = 10.0 [s]
Symbol Stop Time = -10.0 [s]
Symbol Time Interval = 1.0 [s]
Tolerance Mode = Grid Relative
Transparency = 0.0
Variable = Pressure.Gradient
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 2, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.14054
    Pan = 0, 0
    Rotation Quaternion = 0.0897268, -0.147186, 0.978127, 0.116577
    
  END

END

> update
STREAMLINE:Streamline 2
Absolute Tolerance = 0.0 [m]
Apply Instancing Transform = On
Colour = 0.75, 0.75, 0.75
Colour Map = Default Colour Map
Colour Mode = Use Plot Variable
Colour Scale = Linear
Colour Variable = Wall Shear
Colour Variable Boundary Values = Conservative
Cross Periodics = On
Culling Mode = No Culling
Domain List = /DOMAIN GROUP:All Domains
Draw Faces = On
Draw Lines = Off
Draw Streams = On
Draw Symbols = Off
Grid Tolerance = 0.01
Instancing Transform = /DEFAULT INSTANCE TRANSFORM:Default Transform
Lighting = On
Line Width = 1
Location List = input
Locator Sampling Method = Equally Spaced
Max = 0.0 [Pa]
Maximum Number of Items = 25
Min = 0.0 [Pa]
Number of Samples = 25
Number of Sides = 8
Range = Global
Reduction Factor = 1.0
Reduction or Max Number = Max Number
Sample Spacing = 0.1
Sampling Aspect Ratio = 1
Sampling Grid Angle = 0 [degree]
Seed Point Type = Equally Spaced Samples
Simplify Geometry = Off
Specular Lighting = On
Stream Drawing Mode = Line
Stream Initial Direction = 0 , 0 , 0 
Stream Size = 1.0
Stream Symbol = Ball
Streamline Direction = Forward
Streamline Maximum Periods = 20
Streamline Maximum Segments = 10000
Streamline Maximum Time = 0.0 [s]
Streamline Type = 3D Streamline
Streamline Width = 2
Surface Drawing = Smooth Shading
Surface Streamline Direction = Forward and Backward
Symbol Size = 1.0
Symbol Start Time = 10.0 [s]
Symbol Stop Time = -10.0 [s]
Symbol Time Interval = 1.0 [s]
Tolerance Mode = Grid Relative
Transparency = 0.0
Variable = Wall Shear
Variable Boundary Values = Conservative
  OBJECT VIEW TRANSFORM:
  Apply Reflection = Off
  Apply Rotation = Off
  Apply Scale = Off
  Apply Translation = Off
  Principal Axis = Z
  Reflection Plane Option = XY Plane
  Rotation Angle = 0.0 [degree]
  Rotation Axis From = 0 [m], 0 [m], 0 [m]
  Rotation Axis To = 0 [m], 0 [m], 0 [m]
  Rotation Axis Type = Principal Axis
  Scale Vector = 1 , 1 , 1 
  Translation Vector = 0 [m], 0 [m], 0 [m]
  X = 0.0 [m]
  Y = 0.0 [m]
  Z = 0.0 [m]
  END
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0390398, 0.0164296, -0.0640953
    Scale = 3.14054
    Pan = 0, 0
    Rotation Quaternion = 0.210566, -0.179211, 0.959342, 0.0569647
    
  END

END

> update
> delete /STREAMLINE:Streamline 2""")
results1.SendCommand(Command="> autolegend plot=/STREAMLINE:Streamline 1, view=VIEW:View 1")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
Viewport Layout = Horizontal And Right Split
Maximized Viewport = -1
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, 5.97537e-006, 0
    Scale = 2.39685
    Pan = 0, 0
    Rotation Quaternion = 0, 0, 0, 1
    
  END

END

> update
# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""VIEW:View 2
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, -8.47951e-005, -1.67638e-006
    Scale = 2.80817
    Pan = 0, 0
    Rotation Quaternion = 0.0340762, -0.913626, -0.010537, 0.404992
    
  END

END

> update
CLIP PLANE:Clip Plane 2
Flip Normal = Off
Normal = 1 , 0 , 0 
Option = XY Plane
Point = 0 [m], 0 [m], 0 [m]
Point 1 = 0 [m], 0 [m], 0 [m]
Point 2 = 1 [m], 0 [m], 0 [m]
Point 3 = 0 [m], 1 [m], 0 [m]
X = 0.0 [m]
Y = 0.0 [m]
Z = 0.15 [m]
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, 5.97537e-006, 0
    Scale = 2.39685
    Pan = 0, 0
    Rotation Quaternion = 0.0662225, 0.054047, -0.103145, 0.990987
    
  END

END

> update
>undo""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, 5.97537e-006, 0
    Scale = 2.39685
    Pan = 0, 0
    Rotation Quaternion = 0, 0, 0, 1
    
  END

END

> update
# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 3""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /CONTOUR:Contour 1, view=/VIEW:View 3""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, 5.97537e-006, 0
    Scale = 2.87154
    Pan = 0, 0
    Rotation Quaternion = 0, 0, 0, 1
    
  END

END

VIEW:View 2
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, -8.47951e-005, -1.67638e-006
    Scale = 2.80817
    Pan = 0, 0
    Rotation Quaternion = 0.0340762, -0.913626, -0.010537, 0.404992
    
  END

END

> update
VIEWPORT MANAGER:
Viewport Layout = No Split
Maximized Viewport = -1
END""")
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, 5.97537e-006, 0
    Scale = 2.8015
    Pan = 0, 0
    Rotation Quaternion = 0, 0, 0, 1
    
  END

END

> update
# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
Viewport Layout = Horizontal Split
Maximized Viewport = -1
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF/BOUNDARY:wall air, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
  Synchronize Visibility = Off
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 1""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /STREAMLINE:Streamline 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""VIEWPORT MANAGER:
Viewport Layout = Vertical And Bottom Split
Maximized Viewport = -1
END""")
solution1 = system1.GetContainer(ComponentName="Solution")
solution1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Drag...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Monitors*Table1*List1(Residuals, Statistic and Force Monitors)\" '( 2))(cx-gui-do cx-activate-item \"Monitors*Table1*List1(Residuals, Statistic and Force Monitors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Files"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Drag...")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton3(Delete)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton1(Create)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuCreateMonitor*Drag...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Drag Monitor*Table1*Table2*List1(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table2*List1(Wall Zones)\")(cx-gui-do cx-set-toggle-button2 \"Drag Monitor*Table1*Table1*Table1(Options)*CheckButton2(Plot)\" #t)(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table1*Table1(Options)*CheckButton2(Plot)\")(cx-gui-do cx-set-integer-entry \"Drag Monitor*Table1*Table1*Table1(Options)*IntegerEntry7(Average Over)\" 30)(cx-gui-do cx-activate-item \"Drag Monitor*Table1*Table1*Table1(Options)*IntegerEntry7(Average Over)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Initialization\"))(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*ButtonBox8*PushButton1(Initialize)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Plots\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Files\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Report Definitions\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors\"))(cx-gui-do cx-set-list-selections \"Monitors*Table1*List1(Residuals, Statistic and Force Monitors)\" '( 2))(cx-gui-do cx-activate-item \"Monitors*Table1*List1(Residuals, Statistic and Force Monitors)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton5(Plot)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plots*Table1*PushButton2(Set Up)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table3*Frame3*List1(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Solution XY Plot*Table3*Frame3*List1(Surfaces)\")(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table3*Table1*DropDownList1(Y Axis Function)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table3*Table1*DropDownList1(Y Axis Function)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Reports\"))(cx-gui-do cx-set-list-selections \"Reports*Table1*List1(Reports)\" '( 1))(cx-gui-do cx-activate-item \"Reports*Table1*List1(Reports)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry1(X)\" '( 0))(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 1))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 0))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Dynamic Mesh"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Monitors*Table1*Table2*PushButton2(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Drag Monitor*Table1*Table1*Table1(Options)*IntegerEntry7(Average Over)" 1)(cx-gui-do cx-activate-item "Drag Monitor*Table1*Table1*Table1(Options)*IntegerEntry7(Average Over)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Drag Monitor*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Initialization\"))(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*ButtonBox8*PushButton1(Initialize)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Force Reports*List2(Wall Zones)\" '())(cx-gui-do cx-activate-item \"Force Reports*List2(Wall Zones)\")(cx-gui-do cx-set-list-selections \"Force Reports*List2(Wall Zones)\" '( 0))(cx-gui-do cx-activate-item \"Force Reports*List2(Wall Zones)\")(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry1(X)\" '( 1))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry1(X)\" '( 0))(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 1))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '())(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry3(Z)\" '( 1))(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 0))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 1))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry3(Z)\" '( 0))(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 0))(cx-gui-do cx-set-toggle-button2 \"Force Reports*Table1*ToggleBox1(Options)*Center of Pressure\" #t)(cx-gui-do cx-activate-item \"Force Reports*Table1*ToggleBox1(Options)*Center of Pressure\")(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Force Reports*Table1*ToggleBox1(Options)*Moments" #t)(cx-gui-do cx-activate-item "Force Reports*Table1*ToggleBox1(Options)*Moments")(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Force Reports*Table1*ToggleBox1(Options)*Forces\" #t)(cx-gui-do cx-activate-item \"Force Reports*Table1*ToggleBox1(Options)*Forces\")(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry1(X)\" '( 1))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
resultsComponent1 = system1.GetComponent(Name="Results")
resultsComponent1.Refresh()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 2))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 1))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Materials\"))(cx-gui-do cx-set-list-selections \"Materials*Table1*List1(Materials)\" '( 3))(cx-gui-do cx-activate-item \"Materials*Table1*List1(Materials)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Materials*Table1*ButtonBox2*PushButton1(Create/Edit)")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Create/Edit Materials*Table1*Frame1*Frame2*ButtonBox2*PushButton1(Fluent Database)\")(cx-gui-do cx-set-list-selections \"Fluent Database Materials*Table1*Frame1*Frame3*DropDownList1(Material Type)\" '( 1))(cx-gui-do cx-activate-item \"Fluent Database Materials*Table1*Frame1*Frame3*DropDownList1(Material Type)\")(cx-gui-do cx-activate-item \"Fluent Database Materials*PanelButtons*PushButton1(Close)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Cell Zone Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 0))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Fluid*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Reference Values"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Methods"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Solution Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plots*Table1*PushButton2(Set Up)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table3*Table1*DropDownList1(Y Axis Function)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table3*Table1*DropDownList1(Y Axis Function)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table3*Table1*DropDownList2\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table3*Table1*DropDownList2")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Reports\"))(cx-gui-do cx-set-list-selections \"Reports*Table1*List1(Reports)\" '( 4))(cx-gui-do cx-activate-item \"Reports*Table1*List1(Reports)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Volume Integrals*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Reports*Table1*List1(Reports)\" '( 1))(cx-gui-do cx-activate-item \"Reports*Table1*List1(Reports)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Reports*Table1*Table2*PushButton1(Set Up)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry1(X)\" '( 0))(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 1))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry3(Z)\" '( 1))(cx-gui-do cx-set-real-entry-list \"Force Reports*Table1*Frame2*Frame1(Direction Vector)*RealEntry2(Y)\" '( 0))(cx-gui-do cx-activate-item \"Force Reports*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Force Reports*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions\"))(cx-gui-do cx-set-list-selections \"Boundary Conditions*Table1*List2(Zone)\" '( 3))(cx-gui-do cx-activate-item \"Boundary Conditions*Table1*List2(Zone)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Boundary Conditions*Table1*Table3*Table4*ButtonBox1*PushButton1(Edit)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall")(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Specified Shear" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame2*Frame1*Table1*ToggleBox1(Shear Condition)*Specified Shear")(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Stationary Wall")(cx-gui-do cx-set-toggle-button2 "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall" #t)(cx-gui-do cx-activate-item "Wall*Frame3*Frame1(Momentum)*Table1*Frame1*Frame1*Table1*ToggleBox1(Wall Motion)*Moving Wall")(cx-gui-do cx-activate-item "Wall*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Methods\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Controls\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Run Calculation\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Calculation Activities\"))(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Solution Initialization\"))(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*ButtonBox8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*PushButton22(Calculate)")')
resultsComponent1.Refresh()
results1.SendCommand(Command="""VIEW:View 1
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0674029, 0.00614519, -0.00118963
    Scale = 5.28652
    Pan = 0, 0
    Rotation Quaternion = 0, 0, 0, 1
    
  END

END

VIEW:View 3
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0796813, -8.47951e-005, -1.67638e-006
    Scale = 2.73968
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
# Sending visibility action from ViewUtilities
>show /DATA READER/CASE:Case FFF/BOUNDARY:wall air, view=/VIEW:View 3""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 3""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /VOLUME RENDERING:Volume Rendering 1, view=/VIEW:View 3""")
results1.SendCommand(Command="""CLIP PLANE:Clip Plane 2
Flip Normal = Off
Normal = 1 , 0 , 0 
Option = XY Plane
Point = 0 [m], 0 [m], 0 [m]
Point 1 = 0 [m], 0 [m], 0 [m]
Point 2 = 1 [m], 0 [m], 0 [m]
Point 3 = 0 [m], 1 [m], 0 [m]
X = 0.0 [m]
Y = 0.0 [m]
Z = 0.0 [m]
END""")
results1.SendCommand(Command="""CLIP PLANE:Clip Plane 2
Flip Normal = On
Normal = 1 , 0 , 0 
Option = XY Plane
Point = 0 [m], 0 [m], 0 [m]
Point 1 = 0 [m], 0 [m], 0 [m]
Point 2 = 1 [m], 0 [m], 0 [m]
Point 3 = 0 [m], 1 [m], 0 [m]
X = 0.0 [m]
Y = 0.0 [m]
Z = 0.0 [m]
END""")
results1.SendCommand(Command="""CLIP PLANE:Clip Plane 2
Flip Normal = On
Normal = 1 , 0 , 0 
Option = XY Plane
Point = 0 [m], 0 [m], 0 [m]
Point 1 = 0 [m], 0 [m], 0 [m]
Point 2 = 1 [m], 0 [m], 0 [m]
Point 3 = 0 [m], 1 [m], 0 [m]
X = 0.0 [m]
Y = 0.0 [m]
Z = 1 [m]
END""")
results1.SendCommand(Command=">undo")
results1.SendCommand(Command=">undo")
results1.SendCommand(Command=">undo")
results1.SendCommand(Command="> delete /CLIP PLANE:Clip Plane 1")
results1.SendCommand(Command=">redo")
results1.SendCommand(Command=">undo")
results1.SendCommand(Command="""VIEW:View 3
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0810791, 0.090658, 0.105396
    Scale = 2.73968
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
CLIP PLANE:Clip Plane 2
Flip Normal = Off
Normal = 1 , 0 , 0 
Option = XY Plane
Point = 0 [m], 0 [m], 0 [m]
Point 1 = 0 [m], 0 [m], 0 [m]
Point 2 = 1 [m], 0 [m], 0 [m]
Point 3 = 0 [m], 1 [m], 0 [m]
X = 0.0 [m]
Y = 0.0 [m]
Z = 0.0 [m]
END""")
results1.SendCommand(Command="""VIEW:View 3
Clip Scene = 1
Clip Plane = Clip Plane 2
END""")
results1.SendCommand(Command="""VIEW:View 2
Clip Scene = 1
Clip Plane = Clip Plane 2
END""")
results1.SendCommand(Command=">undo")
results1.SendCommand(Command="""CLIP PLANE:Clip Plane 3
Flip Normal = On
Normal = 1 , 0 , 0 
Option = XY Plane
Point = 0 [m], 0 [m], 0 [m]
Point 1 = 0 [m], 0 [m], 0 [m]
Point 2 = 1 [m], 0 [m], 0 [m]
Point 3 = 0 [m], 1 [m], 0 [m]
X = 0.0 [m]
Y = 0.0 [m]
Z = 0.0 [m]
END""")
results1.SendCommand(Command="""VIEW:View 2
Clip Scene = 1
Clip Plane = Clip Plane 3
END""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>hide /CONTOUR:Contour 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""# Sending visibility action from ViewUtilities
>show /STREAMLINE:Streamline 1, view=/VIEW:View 2""")
results1.SendCommand(Command="""VIEW:View 2
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.100225, 0.00550553, 0.0655617
    Scale = 4.46555
    Pan = 0, 0
    Rotation Quaternion = 0.0340762, -0.913626, -0.010537, 0.404992
    
  END

END

VIEW:View 3
  Camera Mode = User Specified
  CAMERA:
    Option = Pivot Point and Quaternion
    Pivot Point = 0.0497222, -0.0490108, -0.0440548
    Scale = 5.26719
    Pan = 0, 0
    Rotation Quaternion = 0.279848, -0.364705, -0.115917, 0.880476
    
  END

END

> update
> setViewportView cmd=copy, view=/VIEW:Figure 1, viewport=1""")
results1.SendCommand(Command="> setViewportView cmd=copy, view=/VIEW:Figure 2, viewport=3")
results1.SendCommand(Command="> setViewportView cmd=copy, view=/VIEW:Figure 3, viewport=2")
results1.SendCommand(Command="> report showItem=/REPORT/SOLUTION SUMMARY OPTIONS")
results1.SendCommand(Command="> report hideItem=/COMMENT:User Data")
results1.SendCommand(Command="> report hideItem=/TITLE PAGE")
results1.SendCommand(Command="> report hideItem=/REPORT/FILE INFORMATION OPTIONS")
results1.SendCommand(Command=">report loadtemplate=Generic Report")
results1.SendCommand(Command=">undo")
results1.SendCommand(Command=">report generatemode=APPEND, loadtemplate=Generic Report")
results1.SendCommand(Command="> report hideItem=/TITLE PAGE")
results1.SendCommand(Command="> report hideItem=/COMMENT:Generic Report Comment 1")
results1.SendCommand(Command="""TITLE PAGE:
Include ANSYS Logo = Off
Include Custom Logo = Off
Include Date = Off
Include TOC = Off
Report Author = Aerostructures
Report Title = Nosecone Analysis
END""")
Save(Overwrite=True)
